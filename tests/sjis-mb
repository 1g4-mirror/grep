#!/bin/sh
# similar to euc-mb and fgrep-infloop, but tests SJIS encoding.
# in this encoding, an ASCII character is both a valid single-byte
# character, and a suffix of a valid double-byte character

: ${srcdir=.}
. "$srcdir/init.sh"; path_prepend_ ../src

require_timeout_

# % becomes a half-width katakana in SJIS, and an invalid sequence
# in UTF-8.  Use this to try skipping implementations that do not
# support SJIS.
encode() { echo "$1" | tr @% '\203\301'; }

k=0
test_grep_reject() {
  k=$(expr $k + 1)
  encode "$2" | \
    LC_ALL=ja_JP.SHIFT_JIS \
      timeout 10s grep $1 $(encode "$3") > out$k 2>&1
  test $? = 1
}

test_grep() {
  k=$(expr $k + 1)
  encode "$2" > exp$k
  LC_ALL=ja_JP.SHIFT_JIS \
    timeout 10s grep $1 $(encode "$3") exp$k > out$k 2>&1
  test $? = 0 && compare out$k exp$k
}

test_grep_reject -F @@ @ || skip_ 'system does not seem to know about SJIS'
test_grep -F %%AA A || skip_ 'system seems to treat SJIS the same as UTF-8'

failure_tests=@A
successful_tests='%%AA @AA @A@@A'

fail=0
for i in $successful_tests; do
  test_grep -F $i A || fail=1
  test_grep -E $i A || fail=1
done

for i in $failure_tests; do
  test_grep_reject -F $i A || fail=1
  test_grep_reject -E $i A || fail=1
done

Exit $fail
